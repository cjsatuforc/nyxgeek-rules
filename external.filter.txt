# external filter for john the ripper
# this will stop john from generating hashes for candidate words that do not meet complexity requirements
# however, it is only really beneficial with super slow hashes, like krb5tgs
#
# usage: ./john --wordlist=password.lst --rules=single --external=Filter_AD_Complexity_Min8 hashfile.hash
#
# matches AD complexity requirements - 3 out of 4 categories: number,upper,lower,special
# min length 8 chars
[List.External:Filter_AD_Complexity_Min8]
void filter()
{
    int i, c ;
    int yesCAP;
    int yesLOW;
    int yesNUM;
    int yesSPECIAL;
    int yesMinLen;
    int yesMaxLen;
    int MinLen;
    int MaxLen;

    MinLen = 8;
    MaxLen = 30;

    i = 0;
    yesCAP = 0;
    yesLOW = 0;
    yesNUM = 0;
    yesSPECIAL = 0;
    yesMinLen = 0;
    yesMaxLen = 1;
    while (c = word[i++])
    {
    if (c >= 'A' && c <= 'Z') { yesCAP = 1; }
    else if (c >= 'a' && c <= 'z') { yesLOW = 1; }
    else if (c >= '0' && c <= '9') { yesNUM = 1; }
    else {yesSPECIAL = 1;}
    }
    if (i > MinLen) {yesMinLen = 1;}
    if (i >= MaxLen) {yesMaxLen = 0;}

    #now tally up if we have 3 of our 4 categories required

    if ( (yesCAP + yesLOW + yesNUM + yesSPECIAL ) < 3 || yesMinLen==0 || yesMaxLen==0) { word = 0; return;}

}

# matches AD complexity requirements - 3 out of 4 categories: number,upper,lower,special
# min length 12 chars
[List.External:Filter_AD_Complexity_Min12]
void filter()
{
    int i, c ;
    int yesCAP;
    int yesLOW;
    int yesNUM;
    int yesSPECIAL;
    int yesMinLen;
    int yesMaxLen;
    int MinLen;
    int MaxLen;

    MinLen = 12;
    MaxLen = 30;

    i = 0;
    yesCAP = 0;
    yesLOW = 0;
    yesNUM = 0;
    yesSPECIAL = 0;
    yesMinLen = 0;
    yesMaxLen = 1;
    while (c = word[i++])
    {
    if (c >= 'A' && c <= 'Z') { yesCAP = 1; }
    else if (c >= 'a' && c <= 'z') { yesLOW = 1; }
    else if (c >= '0' && c <= '9') { yesNUM = 1; }
    else {yesSPECIAL = 1;}
    }
    if (i > MinLen) {yesMinLen = 1;}
    if (i >= MaxLen) {yesMaxLen = 0;}

    #now tally up if we have 3 of our 4 categories required

    if ( (yesCAP + yesLOW + yesNUM + yesSPECIAL ) < 3 || yesMinLen==0 || yesMaxLen==0) { word = 0; return;}

}
